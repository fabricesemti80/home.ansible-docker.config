---
- name: Set login banner
  copy:
    src: motd.txt
    dest: /etc/motd

- name: Update apt-cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
  register: result
  until: result is succeeded

- name: Upgrade all packages # noqa package-latest
  apt:
    upgrade: yes
    state: latest
  when: keep_packages_updated
  tags:
    - skip_ansible_lint

- name: Install some packages
  apt:
    name: "{{ ansible_nas_extra_packages }}"
    state: present
  register: result
  until: result is succeeded

#  - name: Configure smartmontools

- name: "Set hostname to {{ ansible_nas_hostname }}"
  hostname:
    name: "{{ ansible_nas_hostname }}"

- name: "Set timezone to {{ ansible_nas_timezone }}"
  timezone:
    name: "{{ ansible_nas_timezone }}"

##
- name: Mount NFS server share
  # hosts: all
  # become: true
  vars:
    mynfs: "{{ nfs_remote_path }}" # "192.168.0.200:/nfs/share"
    mountpoint: "{{ nfs_local_path }}" # "/share"
    permission: '0777'
    myopts: 'rw,sync'
  tasks:
    - name: utility present redhat-like
      ansible.builtin.yum:
        name:
          - nfs-utils
          - nfs4-acl-tools
        state: present
      when: ansible_os_family == 'RedHat'

    - name: utility present debian-like
      ansible.builtin.apt:
        name:
          - nfs-common
          - nfs4-acl-tools
        state: present
      when: ansible_os_family == 'Debian'

    - name: check mountpoint exist
      ansible.builtin.file:
        path: "{{ mountpoint }}"
        state: directory
        mode: "{{ permission }}"
        owner: root
        group: root

    - name: mount network share
      ansible.posix.mount:
        src: "{{ mynfs }}"
        path: "{{ mountpoint }}"
        fstype: nfs
        opts: "{{ myopts }}"
        state: mounted
##

- name: "Permission share directories"
  file:
    path: "{{ item.path }}"
    state: directory
    owner: ansible-nas
    group: ansible-nas
    mode: "u=rwX,g=rwX,o=rX"
    recurse: false
  loop: "{{ samba_shares }}"
